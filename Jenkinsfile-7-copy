pipeline {
    agent {
        kubernetes {
            yaml '''
            apiVersion: v1
            kind: Pod
            spec:
              containers:
              - name: terraform
                image: hashicorp/terraform:latest
                command: [ "sleep" ]
                args: [ "infinity" ]
              - name: azure-cli
                image: mcr.microsoft.com/azure-cli
                command: [ "sleep" ]
                args: [ "infinity" ]
            '''
        }
    }

    environment {
        KUBECONFIG = '/home/nbadmin/.kube/config'  // Or the path to your kubeconfig file
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        

        stage('Azure Login') {
            steps {
                container('azure-cli') {
                     // Install Python if it is not available
                    sh '''
                    if ! command -v python3 &> /dev/null
                    then
                        echo "Python3 could not be found. Installing..."
                        apk add --no-cache python3 py3-pip
                    else
                        echo "Python3 is already installed"
                    fi
                    
                    # Install pip manually if not available
                    if ! python3 -m pip --version &> /dev/null
                    then
                        echo "pip could not be found. Installing..."
                        python3 -m ensurepip --upgrade
                    else
                        echo "pip is already installed"
                    fi
                    
                    # Upgrade pip, setuptools, and wheel
                    python3 -m pip install --upgrade pip setuptools wheel
                    '''
                    sh '''
                    az --version
                    '''
                    sh '''
                        export KUBECONFIG=/home/jenkins/.kube/config
                        kubectl get pods
                    '''
                }
            }
        }
    }

    post {
        always {
            container('azure-cli') {
                sh 'az logout'
            }
        }
        success {
            echo 'Terraform deployment completed successfully!'
        }
        failure {
            echo 'Terraform deployment failed!'
        }
    }
}
