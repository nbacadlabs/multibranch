pipeline {
    agent none  // We will specify agents per stage

    environment {
        ARM_SUBSCRIPTION_ID = credentials('AZURE_SUBSCRIPTION_ID')
        ARM_CLIENT_ID = credentials('AZURE_CLIENT_ID')
        ARM_CLIENT_SECRET = credentials('AZURE_CLIENT_SECRET')
        ARM_TENANT_ID = credentials('AZURE_TENANT_ID')
    }

    stages {
        stage('Checkout Code') {
            agent any  // Use any agent for code checkout
            steps {
                checkout scm  // Pull the latest code from the repository
            }
        }

        stage('Start Docker Container') {
            agent { docker { image 'hashicorp/terraform:latest' } }  // Use the official Terraform Docker image
            steps {
                script {
                    echo 'Starting Docker container with Terraform image.'
                }
            }
        }

        stage('Azure Login') {
            agent { docker { image 'hashicorp/terraform:latest' } }  // Same image to ensure the correct environment for Azure CLI
            steps {
                script {
                    // Login to Azure using the service principal
                    withCredentials([azureServicePrincipal('AZURE_SUBSCRIPTION_ID')]) {
                        sh '''
                        echo "Logging in to Azure..."
                        az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID
                        az account set --subscription $ARM_SUBSCRIPTION_ID
                        '''
                    }
                }
            }
        }

        stage('Terraform Init') {
            agent { docker { image 'hashicorp/terraform:latest' } }  // Terraform Docker image
            steps {
                script {
                    // Initialize Terraform
                    echo "Running terraform init..."
                    sh 'terraform init ./05-learning'  // Run terraform init to initialize the working directory
                }
            }
        }

        stage('Terraform Plan') {
            agent { docker { image 'hashicorp/terraform:latest' } }  // Same Terraform Docker image
            steps {
                script {
                    // Run Terraform plan to preview the changes
                    echo "Running terraform plan..."
                    sh 'terraform plan -out=tfplan ./05-learning'  // Run terraform plan and save the plan to a file
                }
            }
        }

        stage('Terraform Apply') {
            agent { docker { image 'hashicorp/terraform:latest' } }  // Same Terraform Docker image
            steps {
                script {
                    // Apply the Terraform plan
                    echo "Running terraform apply..."
                    sh 'terraform apply -auto-approve tfplan'  // Automatically approve and apply the plan
                }
            }
        }

        stage('Stop Docker Container') {
            agent { docker { image 'hashicorp/terraform:latest' } }  // Same image to clean up
            steps {
                script {
                    echo "Stopping Docker container."
                }
            }
        }
    }

    post {
        always {
            // Clean up and log out of Azure to ensure a clean environment
            script {
                echo "Logging out of Azure."
                sh 'az logout'  // Log out of Azure
            }
        }
        success {
            echo 'Terraform deployment completed successfully!'
        }
        failure {
            echo 'Terraform deployment failed!'
        }
    }
}
