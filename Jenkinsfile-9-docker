pipeline {
    agent none  // no agent for the pipeline as we are using docker commands in stages

    environment {
        ARM_SUBSCRIPTION_ID = credentials('AZURE_SUBSCRIPTION_ID')
    }

    stages {
        stage('Start Docker Container') {
            steps {
                // Start the Docker container and give it a name
                script {
                    sh 'docker run --name terraformconn -d vakem/kubepodtemplate:latest sleep infinity'
                }
            }
        }

        stage('Terraform Init') {
            steps {
                script {
                    // Run terraform init inside the container
                    sh 'docker exec terraformconn terraform init ./05-learning'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                script {
                    // Run terraform plan inside the container
                    sh 'docker exec terraformconn terraform plan ./05-learning'
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                script {
                    withCredentials([azureServicePrincipal('AZURE_SUBSCRIPTION_ID')]) {
                        sh '''
                        az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
                        az account set --subscription $ARM_SUBSCRIPTION_ID
                        '''
                    }
                    // Run terraform apply inside the container
                    sh 'docker exec terraformconn terraform apply -auto-approve ./05-learning'
                }
            }
        }

        stage('Stop Docker Container') {
            steps {
                // Stop and remove the Docker container after all stages are complete
                script {
                    sh 'docker stop terraformconn'
                    sh 'docker rm terraformconn'
                }
            }
        }
    }

    post {
        always {
            script {
                // Clean up and logout from Azure CLI
                sh 'docker exec terraformconn az logout'
            }
        }
        success {
            echo 'Terraform deployment completed successfully!'
        }
        failure {
            echo 'Terraform deployment failed!'
        }
    }
}
