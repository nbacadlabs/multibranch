pipeline {
    agent none // No global agent, we'll define specific agents for stages

    environment {
        AZURE_SP_CREDENTIALS = credentials('AZURE_SP_ID')
        ARM_SUBSCRIPTION_ID = credentials('AZURE_SUBSCRIPTION_ID')
        // ARM_CLIENT_ID = credentials('AZURE_CLIENT_ID')
        // ARM_CLIENT_SECRET = credentials('AZURE_CLIENT_SECRET')
        // ARM_TENANT_ID = credentials('AZURE_TENANT_ID')
    }

    stages {
        stage('Start Docker Container') {
            agent { docker { image 'vakem/kubepodtemplate:latest' } }  // Specific agent for this stage
            steps {
                script {
                    // You can execute Docker-related commands here within the container
                    echo 'Docker container started!'
                }
            }
        }

        stage('Azure Login') {
            agent { docker { image 'vakem/kubepodtemplate:latest' } }  // Same docker agent for Azure CLI
            steps {
                script {
                    // Azure login using service principal credentials
                    withCredentials([azureServicePrincipal('AZURE_SP_CREDENTIALS')]) {
                        sh '''
                        echo "Logging in to Azure..."
                        az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
                        az account set --subscription $ARM_SUBSCRIPTION_ID
                        '''
                    }
                }
            }
        }

        stage('Terraform Init') {
            agent { docker { image 'vakem/kubepodtemplate:latest' } }  // Same docker agent for terraform stages
            steps {
                script {
                    // Run Terraform init inside the Docker container
                    echo "Running terraform init..."
                    sh 'terraform init'
                }
            }
        }

        stage('Terraform Plan') {
            agent { docker { image 'vakem/kubepodtemplate:latest' } }  // Same docker agent for terraform stages
            steps {
                script {
                    // Run Terraform plan inside the Docker container
                    echo "Running terraform plan..."
                    sh 'terraform plan'
                }
            }
        }

        stage('Terraform Apply') {
            agent { docker { image 'vakem/kubepodtemplate:latest' } }  // Same docker agent for terraform stages
            steps {
                script {
                    // Run Terraform apply inside the Docker container
                    echo "Running terraform apply..."
                    sh 'terraform apply -auto-approve'
                }
            }
        }

        stage('Stop Docker Container') {
            agent { docker { image 'vakem/kubepodtemplate:latest' } }  // Same docker agent for cleanup
            steps {
                script {
                    // Run cleanup commands inside the Docker container if needed
                    echo "Stopping the Docker container!"
                }
            }
        }

        stage('Post Actions') {
            steps {
                script {
                    // Ensure clean-up after execution
                    echo "Post-actions executed!"
                }
            }
        }
    }

    post {
        always {
            // You can add any post-condition actions here
            script {
                echo "Pipeline finished."
            }
        }

        success {
            echo 'Terraform deployment completed successfully!'
        }

        failure {
            echo 'Terraform deployment failed!'
        }
    }
}
